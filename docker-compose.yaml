# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana

version: "3.9"
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data

  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/data:/data/db

  mysql:
    container_name: mysql_container
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=jobberapp
      - MYSQL_DATABASE=jobberapp_auth
      - MYSQL_ROOT_PASSWORD=api
      - MYSQL_PASSWORD=api
    ports:
      - 3307:3306
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=jobberapp
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=jobberapp_reviews
    ports:
      - 5432:5432
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgres

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=jobberapp
      - RABBITMQ_DEFAULT_PASS=jobberapppass
    ports:
      # AMQP protocol port - to access from our application
      - 5672:5672
      # Management port - to access the dashboard
      - 15672:15672

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.1
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
    ports:
      # ElasticSearch uses 9200 for REST and 9300 for inter-node communication in a cluster
      - 9200:9200
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.15.1
    restart: always
    environment:
      ELASTICSEARCH_HOST: "http://elasticsearch_container:9200"
    ports:
      - 5601:5601
    volumes:
      - ./kibana.yaml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
    networks:
      - elastic
  gateway:
    container_name: gateway_container
    build:
      context: ../microservices/1-gateway-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4000:4000
    env_file: ../microservices/1-gateway-service/.env
    environment:
      - ENABLE_APM=0
      - GATEWAY_JWT_TOKEN=202f1c6d79b74a307ab01a71f327b1dd
      - JWT_TOKEN=203f88a26466a53179bbbb897fc6a434
      - NODE_ENV=development
      - SECRET_KEY_ONE=ebc707a799280e1ac83e7f6c1390f973
      - SECRET_KEY_TWO=22bae7e79542f24be647e66340dfaf27
      - CLIENT_URL=http://localhost:3000
      - AUTH_BASE_URL=http://localhost:4002
      - USERS_BASE_URL=http://localhost:4003
      - GIG_BASE_URL=http://localhost:4004
      - MESSAGE_BASE_URL=http://localhost:4005
      - ORDER_BASE_URL=http://localhost:4006
      - REVIEW_BASE_URL=http://localhost:4007
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
  notifications:
    container_name: notification_container
    build:
      context: ../microservices/2-notification-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4001:4001
    env_file: ../microservices/2-notification-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://jobberapp:jobberapppass@rabbitmq_container:5672
      - SENDER_EMAIL=hailey.miller@ethereal.email
      - SENDER_EMAIL_PASSWORD=TTRRFjUy3MGp6QwJFV
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch


networks:
  elastic:
    name: elastic
